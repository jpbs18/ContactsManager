// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactsManager.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230716113436_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea75f617-0e2e-41d8-aa52-0caac5dd9072"),
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = new Guid("a4e032a1-9fc6-4f22-be31-73daf564ad41"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("158f59f7-5aad-4c8e-8bd0-ba95f4033887"),
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("8a05aaee-3985-47e2-8034-f05fa0e8d2ea"),
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("87c7d73a-8383-4b22-b728-0c0f1bb6eac0"),
                            Name = "Argentina"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasDefaultValue("Porto")
                        .HasColumnName("Address");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("ReceivedNewsLetter")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7271c89-a711-4ce5-b8b1-da7288010cf6"),
                            Address = "Maia",
                            BirthDate = new DateTime(1991, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("ea75f617-0e2e-41d8-aa52-0caac5dd9072"),
                            Email = "j.p.santos21@hotmail.com",
                            Gender = "Male",
                            Name = "João Santos",
                            ReceivedNewsLetter = true
                        },
                        new
                        {
                            Id = new Guid("fb7a7144-68a8-4b4e-8e7f-6ea77610a48c"),
                            Address = "Castêlo da Maia",
                            BirthDate = new DateTime(1991, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("a4e032a1-9fc6-4f22-be31-73daf564ad41"),
                            Email = "claudia.silva@hotmail.com",
                            Gender = "Female",
                            Name = "Cláudia Silva",
                            ReceivedNewsLetter = true
                        },
                        new
                        {
                            Id = new Guid("5f1e1be5-26ea-4bdc-88fb-78102955e0af"),
                            Address = "Maia",
                            BirthDate = new DateTime(1964, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("158f59f7-5aad-4c8e-8bd0-ba95f4033887"),
                            Email = "j.santos_1964@hotmail.com",
                            Gender = "Male",
                            Name = "Joaquim Santos",
                            ReceivedNewsLetter = true
                        },
                        new
                        {
                            Id = new Guid("71cb2bb8-dd80-4d7c-9dba-422489b8fa7e"),
                            Address = "Maia",
                            BirthDate = new DateTime(1991, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("8a05aaee-3985-47e2-8034-f05fa0e8d2ea"),
                            Email = "adelia.santos@hotmail.com",
                            Gender = "Female",
                            Name = "Adélia Santos",
                            ReceivedNewsLetter = false
                        },
                        new
                        {
                            Id = new Guid("0d01ee24-e384-42d5-b4ee-a7b7a0d4aa45"),
                            Address = "Águas Santas",
                            BirthDate = new DateTime(1992, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("ea75f617-0e2e-41d8-aa52-0caac5dd9072"),
                            Email = "jorge.basto@hotmail.com",
                            Gender = "Male",
                            Name = "Jorge Basto",
                            ReceivedNewsLetter = true
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.HasOne("Entities.Country", "Country")
                        .WithMany("Persons")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
